% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCSF_rand.R
\name{PCSF_rand}
\alias{PCSF_rand}
\title{Prize-collecting Steiner Forest (PCSF) with randomized edge costs}
\usage{
PCSF_rand(ppi, terminals, n = 10, r = 0.1, w = 2, b = 1, mu = 5e-04)
}
\arguments{
\item{ppi}{An interaction network as an \pkg{igraph} object.}

\item{terminals}{A list of terminal genes with prizes to be analyzed in the PCSF context. 
A named \code{numeric} vector, where terminal genes are named same as in the interaction network 
and numeric values correspond to the importance of the gene within the study.}

\item{n}{An \code{integer} value to determine the number of runs with random noise added edge costs. 
A default value is 10.}

\item{r}{A \code{numeric} value to determine additional random noise to edge costs. 
A random noise upto r percent of the edge cost is added to each edge. A default value is 0.1}

\item{w}{A  \code{numeric} value for tuning the number of trees in the output. A default value is 2.}

\item{b}{A  \code{numeric} value for tuning the node prizes. A default value is 1.}

\item{mu}{A  \code{numeric} value for a hub penalization. A default value is 0.0005.}
}
\value{
The final subnetwork obtained by taking the union of the PCSF outputs generated by 
adding a random noise to edge costs each time. It returns an \pkg{igraph} object with the node prize 
and edge cost attributes representing the total number of show ups throughout all runs.
}
\description{
\code{PCSF_rand} returns a union of subnetworks obtained by solving the PCSF on the 
given interaction network by adding a random noise to edge costs each time.
}
\details{
In order to increase the robustness of the resulting structure, 
it is recommended to solve the PCSF several times on the same network
while adding some noise to the edge costs each time, and combine all results 
in a final subnetwork. The union of all outputs may explain 
the underlying biology better.
}
\examples{
\dontrun{
library("PCSF")
data("STRING")
data("Tgfb_phospho")
terminals <- Tgfb_phospho
ppi <- construct_interactome(STRING)
subnet <- PCSF_rand(ppi, terminals, n = 10, r =0.1, w = 2, b = 2, mu = 0.0005)}

}
\references{
Akhmedov M., LeNail A., Bertoni F., Kwee I., Fraenkel E., and Montemanni R. (2017)
A Fast Prize-Collecting Steiner Forest Algorithm for Functional Analyses in Biological Networks.
\emph{Lecture Notes in Computer Science}, to appear.
}
\seealso{
\code{\link{PCSF}}, \code{\link{plot.PCSFe}}
}
\author{
Murodzhon Akhmedov
}
